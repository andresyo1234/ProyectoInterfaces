/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package proyectointerfaces;

import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.*;
import java.util.Vector;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.border.BevelBorder;
import javax.swing.table.DefaultTableModel;
import static proyectointerfaces.InicioSesion.IdUsuario;

/**
 *
 * @author andres
 */
public class AgendaPrincipal extends javax.swing.JFrame {

    

    /**
     * Creates new form AgendaPrincipal
     */
    public AgendaPrincipal() {
        initComponents();
        BotonPaginaAgenda.setBorder(new BevelBorder(BevelBorder.RAISED, null, null, null, null));
        jButton2.setBorder(new BevelBorder(BevelBorder.RAISED, null, null, null, null));
        BotonPaginaCompra.setBorder(new BevelBorder(BevelBorder.RAISED, null, null, null, null));
        BotonPaginaCartera.setBorder(new BevelBorder(BevelBorder.RAISED, null, null, null, null));
        setTitle("Mi Agenda - Agenda");

        editarContacto.setEnabled(false);
        eliminarContacto.setEnabled(false);

        Statement st_;
        ResultSet rs_;

        try {
            Connection con = Conexion.getConexion();
            st_ = con.createStatement();

            System.out.println("ID del usuario: " + IdUsuario);
            rs_ = st_.executeQuery("select * from Contactos where Id_usuario = " + IdUsuario);
            Vector v;
            DefaultTableModel model = (DefaultTableModel) TablaContactos.getModel();

            while (rs_.next()) {
                v = new Vector();
                v.add(rs_.getString("Nombre"));
                v.add(rs_.getString("Apellidos"));
                v.add(rs_.getString("Email"));
                v.add(rs_.getString("Telefono"));
                v.add(rs_.getString("Genero"));
                model.addRow(v);

            }
            rs_.close();
            //TablaContactos.setModel(model);
            // JOptionPane.showMessageDialog(null, "El alumno se ha registrado correctamente");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "usuario ya exitente");
        } catch (ClassNotFoundException e) {
            System.out.println("fallo2");
        } catch (Exception e) {
            System.out.println("fallo3");

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Contactos = new javax.swing.JPopupMenu();
        popupEditar = new javax.swing.JMenuItem();
        popupEliminar = new javax.swing.JMenuItem();
        Navegacion = new javax.swing.JPopupMenu();
        irBlocNotas = new javax.swing.JMenuItem();
        irListaCompra = new javax.swing.JMenuItem();
        irCartera = new javax.swing.JMenuItem();
        irInformes = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        BotonPaginaAgenda = new javax.swing.JButton();
        BotonPaginaCompra = new javax.swing.JButton();
        BotonPaginaCartera = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaContactos = new javax.swing.JTable();
        anyadirContacto = new javax.swing.JButton();
        editarContacto = new javax.swing.JButton();
        eliminarContacto = new javax.swing.JButton();

        popupEditar.setText("Editar Contacto");
        popupEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popupEditarActionPerformed(evt);
            }
        });
        Contactos.add(popupEditar);

        popupEliminar.setText("Eliminar Contacto");
        popupEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popupEliminarActionPerformed(evt);
            }
        });
        Contactos.add(popupEliminar);

        irBlocNotas.setText("Ir a Bloc de Notas");
        irBlocNotas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                irBlocNotasActionPerformed(evt);
            }
        });
        Navegacion.add(irBlocNotas);

        irListaCompra.setText("Ir a Lista Compra");
        irListaCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                irListaCompraActionPerformed(evt);
            }
        });
        Navegacion.add(irListaCompra);

        irCartera.setText("Ir a Cartera");
        irCartera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                irCarteraActionPerformed(evt);
            }
        });
        Navegacion.add(irCartera);

        irInformes.setText("Ir a Informes");
        irInformes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                irInformesActionPerformed(evt);
            }
        });
        Navegacion.add(irInformes);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(231, 246, 242));

        jPanel1.setBackground(new java.awt.Color(57, 91, 100));

        BotonPaginaAgenda.setBackground(new java.awt.Color(57, 91, 100));
        BotonPaginaAgenda.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        BotonPaginaAgenda.setText("Agenda");
        BotonPaginaAgenda.setToolTipText("Ventana de Agenda");
        BotonPaginaAgenda.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        BotonPaginaAgenda.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        BotonPaginaAgenda.setMargin(new java.awt.Insets(0, 0, 0, 0));
        BotonPaginaAgenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonPaginaAgendaActionPerformed(evt);
            }
        });

        BotonPaginaCompra.setBackground(new java.awt.Color(57, 91, 100));
        BotonPaginaCompra.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        BotonPaginaCompra.setText("Lista Compra");
        BotonPaginaCompra.setToolTipText("Ventana de Lista Compra");
        BotonPaginaCompra.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        BotonPaginaCompra.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        BotonPaginaCompra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BotonPaginaCompraMouseClicked(evt);
            }
        });
        BotonPaginaCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonPaginaCompraActionPerformed(evt);
            }
        });

        BotonPaginaCartera.setBackground(new java.awt.Color(57, 91, 100));
        BotonPaginaCartera.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        BotonPaginaCartera.setText("Cartera");
        BotonPaginaCartera.setToolTipText("Ventana de Cartera");
        BotonPaginaCartera.setAlignmentY(0.0F);
        BotonPaginaCartera.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        BotonPaginaCartera.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        BotonPaginaCartera.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        BotonPaginaCartera.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonPaginaCartera.setIconTextGap(0);
        BotonPaginaCartera.setMargin(new java.awt.Insets(0, 0, 0, 0));
        BotonPaginaCartera.setRequestFocusEnabled(false);
        BotonPaginaCartera.setRolloverEnabled(false);
        BotonPaginaCartera.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BotonPaginaCarteraMouseClicked(evt);
            }
        });
        BotonPaginaCartera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonPaginaCarteraActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(57, 91, 100));
        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jButton2.setText("Bloc de Notas");
        jButton2.setToolTipText("Ventana de Bloc de Notas");
        jButton2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectointerfaces/imagenes/PNGENGRANAJE.png"))); // NOI18N
        jButton1.setToolTipText("Ventana de Informes");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(BotonPaginaAgenda, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(BotonPaginaCompra, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(BotonPaginaCartera, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BotonPaginaCompra, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
            .addComponent(BotonPaginaAgenda, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(BotonPaginaCartera, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new java.awt.Color(153, 196, 255));
        jPanel3.setComponentPopupMenu(Navegacion);
        jPanel3.setInheritsPopupMenu(true);

        TablaContactos.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        TablaContactos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Apellido", "Correo", "Telefono", "Genero"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TablaContactos.setToolTipText("Haz Click en un Contacto para Editarlo o Eliminarlo...");
        TablaContactos.setComponentPopupMenu(Contactos);
        TablaContactos.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                TablaContactosFocusGained(evt);
            }
        });
        jScrollPane1.setViewportView(TablaContactos);
        if (TablaContactos.getColumnModel().getColumnCount() > 0) {
            TablaContactos.getColumnModel().getColumn(0).setResizable(false);
            TablaContactos.getColumnModel().getColumn(1).setResizable(false);
            TablaContactos.getColumnModel().getColumn(2).setResizable(false);
            TablaContactos.getColumnModel().getColumn(3).setResizable(false);
            TablaContactos.getColumnModel().getColumn(4).setResizable(false);
            TablaContactos.getColumnModel().getColumn(4).setPreferredWidth(0);
        }

        anyadirContacto.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        anyadirContacto.setText("Añadir contacto");
        anyadirContacto.setToolTipText("Click para Añadir un Contacto...");
        anyadirContacto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        anyadirContacto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anyadirContactoActionPerformed(evt);
            }
        });

        editarContacto.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        editarContacto.setText("Editar contacto");
        editarContacto.setToolTipText("Click para Editar un Contacto...");
        editarContacto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        editarContacto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarContactoActionPerformed(evt);
            }
        });

        eliminarContacto.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        eliminarContacto.setText("Eliminar contacto");
        eliminarContacto.setToolTipText("Click para Eliminar un Contacto...");
        eliminarContacto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        eliminarContacto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarContactoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 643, Short.MAX_VALUE)
                .addGap(33, 33, 33)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(anyadirContacto, javax.swing.GroupLayout.DEFAULT_SIZE, 335, Short.MAX_VALUE)
                    .addComponent(editarContacto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(eliminarContacto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(45, 45, 45))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 590, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(anyadirContacto, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(editarContacto, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(eliminarContacto, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(39, 39, 39))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        setSize(new java.awt.Dimension(1095, 740));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void BotonPaginaAgendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonPaginaAgendaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BotonPaginaAgendaActionPerformed

    private void anyadirContactoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anyadirContactoActionPerformed

        AnyadirContacto ac = new AnyadirContacto();
        ac.setVisible(true);
        dispose();
    }//GEN-LAST:event_anyadirContactoActionPerformed

    private void BotonPaginaCarteraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonPaginaCarteraActionPerformed


    }//GEN-LAST:event_BotonPaginaCarteraActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        rootPane.repaint();
        System.out.println("refresh");
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem1MouseClicked

    }//GEN-LAST:event_jMenuItem1MouseClicked
    /// ABRIR AGENDA    
    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        Informes in = new Informes();
        in.setVisible(true);
        in.setLocationRelativeTo(null);
        in.setSize(1080, 720);
        dispose();
    }//GEN-LAST:event_jButton1MouseClicked

    //ABRIR LISTA COMPRA
    private void BotonPaginaCompraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BotonPaginaCompraMouseClicked
        // TODO add your handling code here:
        ListaCompra lc = new ListaCompra();
        lc.setVisible(true);
        lc.setLocationRelativeTo(null);
        lc.setSize(1080, 720);
        dispose();
    }//GEN-LAST:event_BotonPaginaCompraMouseClicked
    //abrir cartera
    private void BotonPaginaCarteraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BotonPaginaCarteraMouseClicked
        // TODO add your handling code here:
        Cartera cart = new Cartera();
        cart.setVisible(true);
        cart.setLocationRelativeTo(null);
        cart.setSize(1080, 720);
        dispose();
    }//GEN-LAST:event_BotonPaginaCarteraMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        BlogNotas bn = new BlogNotas();
        bn.setVisible(true);
        bn.setLocationRelativeTo(null);
        bn.setSize(1080, 720);
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void BotonPaginaCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonPaginaCompraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BotonPaginaCompraActionPerformed

    private void editarContactoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarContactoActionPerformed
        Statement st_;
        ResultSet rs_;

        try {
            Connection con = Conexion.getConexion();
            st_ = con.createStatement();

            rs_ = st_.executeQuery("select * from Contactos where Id_usuario = " + IdUsuario);

            int[] rows = TablaContactos.getSelectedRows();

            if (!(rows.length > 1)) {

                while (rs_.getRow() <= rows[0]) {
                    rs_.next();
                    System.out.println(rs_.getRow());
                    
                }
                EditarContacto ec = new EditarContacto();
                EditarContacto.idcontacto = rs_.getInt("IdContacto");
                EditarContacto.inputNombre.setText(rs_.getString("Nombre"));
                EditarContacto.inputApellido.setText(rs_.getString("Apellidos"));
                EditarContacto.inputEmail.setText(rs_.getString("Email"));
                System.out.println("aa");
                EditarContacto.inputTelefono.setText(rs_.getString("Telefono"));
               ec.setVisible(true);
               dispose();
            } else {
                JOptionPane.showMessageDialog(null, "Seleccione unicamente 1 fila ");
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "fallo1");
        } catch (ClassNotFoundException e) {
            System.out.println("fallo2");
        } catch (Exception e) {
            System.out.println("fallo3");

        }

        
    }//GEN-LAST:event_editarContactoActionPerformed

    private void eliminarContactoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarContactoActionPerformed

        Statement st_;
        ResultSet rs_;

        try {
            Connection con = Conexion.getConexion();
            st_ = con.createStatement();

            rs_ = st_.executeQuery("select * from Contactos where Id_usuario = " + IdUsuario);

            int[] rows = TablaContactos.getSelectedRows();

            if (!(rows.length > 1)) {

                while (rs_.getRow() <= rows[0]) {
                    rs_.next();
                    System.out.println(rs_.getRow());

                }
                st_.executeUpdate("Delete from Contactos where IdContacto=" + rs_.getString("IdContacto"));
                dispose();
                AgendaPrincipal ap = new AgendaPrincipal();
                ap.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(null, "Seleccione unicamente 1 fila ");
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "fallo1");
        } catch (ClassNotFoundException e) {
            System.out.println("fallo2");
        } catch (Exception e) {
            System.out.println("fallo3");

        }


    }//GEN-LAST:event_eliminarContactoActionPerformed

    private void TablaContactosFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TablaContactosFocusGained
        editarContacto.setEnabled(true);
        eliminarContacto.setEnabled(true);
    }//GEN-LAST:event_TablaContactosFocusGained

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void popupEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popupEliminarActionPerformed
        
        Statement st_;
        ResultSet rs_;

        try {
            Connection con = Conexion.getConexion();
            st_ = con.createStatement();

            rs_ = st_.executeQuery("select * from Contactos where Id_usuario = " + IdUsuario);

            int[] rows = TablaContactos.getSelectedRows();

            if (!(rows.length > 1)) {

                while (rs_.getRow() <= rows[0]) {
                    rs_.next();
                    System.out.println(rs_.getRow());

                }
                st_.executeUpdate("Delete from Contactos where IdContacto=" + rs_.getString("IdContacto"));
                dispose();
                AgendaPrincipal ap = new AgendaPrincipal();
                ap.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(null, "Seleccione unicamente 1 fila ");
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "fallo1");
        } catch (ClassNotFoundException e) {
            System.out.println("fallo2");
        } catch (Exception e) {
            System.out.println("fallo3");

        }



    }//GEN-LAST:event_popupEliminarActionPerformed

    private void popupEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popupEditarActionPerformed
               Statement st_;
        ResultSet rs_;

        try {
            Connection con = Conexion.getConexion();
            st_ = con.createStatement();

            rs_ = st_.executeQuery("select * from Contactos where Id_usuario = " + IdUsuario);

            int[] rows = TablaContactos.getSelectedRows();

            if (!(rows.length > 1)) {

                while (rs_.getRow() <= rows[0]) {
                    rs_.next();
                    System.out.println(rs_.getRow());
                    
                }
                EditarContacto ec = new EditarContacto();
                EditarContacto.idcontacto = rs_.getInt("IdContacto");
                EditarContacto.inputNombre.setText(rs_.getString("Nombre"));
                EditarContacto.inputApellido.setText(rs_.getString("Apellidos"));
                EditarContacto.inputEmail.setText(rs_.getString("Email"));
                System.out.println("aa");
                EditarContacto.inputTelefono.setText(rs_.getString("Telefono"));
               ec.setVisible(true);
               dispose();
            } else {
                JOptionPane.showMessageDialog(null, "Seleccione unicamente 1 fila ");
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "fallo1");
        } catch (ClassNotFoundException e) {
            System.out.println("fallo2");
        } catch (Exception e) {
            System.out.println("fallo3");

        }

        
    }//GEN-LAST:event_popupEditarActionPerformed

    private void irInformesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_irInformesActionPerformed
        Informes in = new Informes();
        in.setVisible(true);
        in.setLocationRelativeTo(null);
        in.setSize(1080, 720);
        dispose();
    }//GEN-LAST:event_irInformesActionPerformed

    private void irCarteraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_irCarteraActionPerformed
         // TODO add your handling code here:
        Cartera cart = new Cartera();
        cart.setVisible(true);
        cart.setLocationRelativeTo(null);
        cart.setSize(1080, 720);
        dispose();
    }//GEN-LAST:event_irCarteraActionPerformed

    private void irListaCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_irListaCompraActionPerformed
        ListaCompra lc = new ListaCompra();
        lc.setVisible(true);
        lc.setLocationRelativeTo(null);
        lc.setSize(1080, 720);
        dispose();
    }//GEN-LAST:event_irListaCompraActionPerformed

    private void irBlocNotasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_irBlocNotasActionPerformed
        BlogNotas bn = new BlogNotas();
        bn.setVisible(true);
        bn.setLocationRelativeTo(null);
        bn.setSize(1080, 720);
        dispose();
    }//GEN-LAST:event_irBlocNotasActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AgendaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AgendaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AgendaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AgendaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        System.out.println("entra");
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AgendaPrincipal().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonPaginaAgenda;
    private javax.swing.JButton BotonPaginaCartera;
    private javax.swing.JButton BotonPaginaCompra;
    private javax.swing.JPopupMenu Contactos;
    private javax.swing.JPopupMenu Navegacion;
    public static javax.swing.JTable TablaContactos;
    private javax.swing.JButton anyadirContacto;
    private javax.swing.JButton editarContacto;
    private javax.swing.JButton eliminarContacto;
    private javax.swing.JMenuItem irBlocNotas;
    private javax.swing.JMenuItem irCartera;
    private javax.swing.JMenuItem irInformes;
    private javax.swing.JMenuItem irListaCompra;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem popupEditar;
    private javax.swing.JMenuItem popupEliminar;
    // End of variables declaration//GEN-END:variables
}
